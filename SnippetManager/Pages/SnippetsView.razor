@attribute [Authorize]
@page "/SnippetsView"
@inject ISnippetDataAccess _sdb
@inject AuthenticationStateProvider context
@inject UserManager<IdentityUser> UserManager;

@if (_snippets == null)
{
    <p><em>Loading...</em></p>
}
else if (_snippets.Count == 0)
{
    <div class="alert alert-info">
        <p class="text-danger font-weight-bolder">No records to show.</p>
    </div>
}
else
{
    <MudTable Items="@_snippets" Dense="@dense" Hover="true" Filter="new Func<SnippetModel,bool>(FilterFunc)" @bind-SelectedItem="selectedItem">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Code Snippets</MudText>
            <MudToolBarSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Description</MudTh>
            <MudTh>Code Snippet</MudTh>
            <MudTh>Environment</MudTh>
            <MudTh>OS</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Description">@context.Name</MudTd>
            <MudTd DataLabel="Code Snippet">@context.Code</MudTd>
            <MudTd DataLabel="Environment">@context.Environment.Name</MudTd>
            <MudTd DataLabel="OS">@context.Environment.OSName</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>

}




@code {

    private bool dense = false;
    private List<SnippetModel> _snippets;
    private string searchString = "";
    private SnippetModel selectedItem = null;
    private HashSet<SnippetModel> selectedItems = new HashSet<SnippetModel>();
    protected override async Task OnInitializedAsync()
    {
        var user = context.GetAuthenticationStateAsync().Result.User;

        _snippets = await _sdb.GetSnippetsById(UserManager.GetUserId(user));
    }
    private bool FilterFunc(SnippetModel snippet)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (snippet.Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (snippet.Environment.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (snippet.Environment.OSName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{snippet.Code} {snippet.Name} {snippet.Environment.Name} {snippet.Environment.OSName}".Contains(searchString))
            return true;
        return false;
    }
}


